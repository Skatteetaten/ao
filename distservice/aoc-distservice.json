{
  "kind": "Pod",
  "apiVersion": "v1",
  "metadata": {
    "name": "${APP_NAME}",
    "labels": {
      "name": "${APP_NAME}"
    }
  },
  "spec": {
    "containers": [{
      "name": "${APP_NAME}",
      "image": "cockroachdb/cockroach:v1.0",
      "command": [
        "/bin/bash",
        "-ecx",
        "# The use of qualified `hostname -f` is crucial:\n# Other nodes aren't able to look up the unqualified hostname.\nCRARGS=(\"start\" \"--logtostderr=true\" \"--insecure\" \"--host\" \"0.0.0.0\" \"--http-host\" \"0.0.0.0\")\n# We only want to initialize a new cluster (by omitting the join flag)\n# if we're sure that we're the first node (i.e. index 0) and that\n# there aren't any other nodes running as part of the cluster that\n# this is supposed to be a part of (which indicates that a cluster\n# already exists and we should make sure not to create a new one).\n# It's fine to run without --join on a restart if there aren't any\n# other nodes.\nif [ ! \"$(hostname)\" == \"${APP_NAME}\" ] || \\\n   [ -e \"/cockroach/cockroach-data/cluster_exists_marker\" ]\nthen\n  # We don't join cockroachdb in order to avoid a node attempting\n  # to join itself, which currently doesn't work\n  # (https://github.com/cockroachdb/cockroach/issues/9625).\n  CRARGS+=(\"--join\" \"cockroachdb-public\")\nfi\nexec /cockroach/cockroach ${CRARGS[*]}\n"
      ],
      "ports": [{
        "name": "grpc",
        "containerPort": 26257,
        "protocol": "TCP"
      },{
        "name": "http",
        "containerPort": 8080,
        "protocol": "TCP"
      }],
      "securityContext": {
        "capabilities": {}
      },
      "volumeMounts": [{
        "mountPath": "/cockroach/cockroach-data",
        "name": "cockroach",
        "readOnly": false
      }]
    }],
    "volumes": [{
      "name": "cockroach",
      "persistentVolumeClaim":{
        "claimName": "cockroach-data-${APP_NAME}"}
    }]
  }
}, {
"kind": "Route",
"apiVersion": "v1",
"metadata": {
"name": "${APP_NAME}",
"creationTimestamp": null,
"labels": {
"app": "aurora-cockroach-10",
"name": "${APP_NAME}",
"template": "aurora-cockroach-10",
"xpaas": "0.1.0"
},
"annotations": {
"openshift.io/host.generated": "true"
}
},
"spec": {
"to": {
"kind": "Service",
"name": "${APP_NAME}l",
"weight": 100
},
"port": {
"targetPort": "http"
},
"wildcardPolicy": "None"
},
"status": {
"ingress": [
{
"routerName": "router",
"conditions": [
{
"type": "Admitted",
"status": "True",
"lastTransitionTime": "2017-05-12T07:18:16Z"
}
],
"wildcardPolicy": "None"
}
]
}
}